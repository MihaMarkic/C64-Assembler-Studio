<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:C64AssemblerStudio.Desktop.Converters"
             xmlns:breakpoints="clr-namespace:C64AssemblerStudio.Engine.ViewModels.Breakpoints;assembly=C64AssemblerStudio.Engine"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="breakpoints:BreakpointsViewModel"
             x:Class="C64AssemblerStudio.Desktop.Views.Tools.Breakpoints">
    <UserControl.Resources>
  <converters:BoolToColorConverter x:Key="IsHitToBackgroundConverter" OnTrue="Yellow" OnFalse="Transparent" />
  <!--<c:BreakpointContextConverter x:Key="BreakpointContextConverter" BindingColumn="{Binding #Grid.Columns[6]}" />-->
</UserControl.Resources>
<UserControl.Styles>
  <Style Selector="DataGridCell.colored">
    <Setter Property="Background" Value="{Binding (breakpoints:BreakpointViewModel).IsCurrentlyHit, Mode=OneWay, Converter={StaticResource IsHitToBackgroundConverter}}"/>
  </Style>
</UserControl.Styles>
<DockPanel>
  <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Right">
    <Button Command="{Binding RemoveAllBreakpointsCommand}" Width="32" Height="32" ToolTip.Tip="Remove all">
      <Image>
        <Image.Source>
          <SvgImage Source="/Assets/Icons/trash.svg" />
        </Image.Source>
      </Image>
    </Button>
    <Button Margin="4" Command="{Binding CreateBreakpointCommand}">Create</Button>
  </StackPanel>
  <DataGrid Name="Grid" ItemsSource="{Binding Breakpoints}" AutoGenerateColumns="False"
    FontFamily="{StaticResource CodeFont}" FontSize="20">
    <DataGrid.Styles>
      <Style Selector="DataGridRow">
        <Setter Property="ContextMenu">
          <Setter.Value>
            <ContextMenu>
              <MenuItem Header="Properties..." Command="{Binding #Grid.((breakpoints:BreakpointsViewModel)DataContext).ShowBreakpointPropertiesCommand}" CommandParameter="{Binding}" />
              <MenuItem Header="Remove" Command="{Binding #Grid.((breakpoints:BreakpointsViewModel)DataContext).RemoveBreakpointCommand}" CommandParameter="{Binding}" />
            </ContextMenu >
          </Setter.Value>
        </Setter>
      </Style>
      <Style Selector="DataGridRow.error">
        <Setter Property="Background" Value="#1FFF0000" />
      </Style>
    </DataGrid.Styles>
    <DataGrid.Resources>
      <converters:HexAddressConverter x:Key="HexAddressConverter" />
      <converters:BreakpointAddressRangesToStringConverter x:Key="BreakpointAddressRangesToStringConverter" />
      <converters:BreakpointBindingToStringConverter x:Key="BreakpointBindingToStringConverter" />
      <converters:UIntArrayToTextConverter x:Key="UIntArrayToTextConverter" />
    </DataGrid.Resources>
    <DataGrid.Columns>
      <DataGridTextColumn Header="Number" IsReadOnly="true" CellStyleClasses="colored" FontSize="20"
        Binding="{Binding CheckpointNumbers, Converter={StaticResource UIntArrayToTextConverter}, Mode=OneWay}"/>
      <DataGridCheckBoxColumn CellStyleClasses="colored" Header="Enabled" Binding="{Binding IsEnabled}" IsReadOnly="True" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Error" Binding="{Binding Error, Mode=OneWay}" IsReadOnly="True" />
      <DataGridCheckBoxColumn CellStyleClasses="colored" Header="Stop" Binding="{Binding StopWhenHit}" IsReadOnly="True" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Mode" Binding="{Binding Mode, Mode=OneWay}" IsReadOnly="True" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Ranges" 
        Binding="{Binding AddressRanges, Converter={StaticResource BreakpointAddressRangesToStringConverter}, Mode=OneWay}" IsReadOnly="True" />
      <!--<DataGridTextColumn CellStyleClasses="colored" Header="End" 
        Binding="{Binding EndAddress, Converter={StaticResource HexAddressConverter}, Mode=OneWay}" IsReadOnly="True" />-->
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Binding" 
        Binding="{Binding Bind, Converter={StaticResource BreakpointBindingToStringConverter}, Mode=OneWay}" IsReadOnly="True" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Hit Count" Binding="{Binding HitCount, Mode=OneWay}" IsReadOnly="True" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Ignore Count" Binding="{Binding IgnoreCount, Mode=OneWay}" IsReadOnly="True" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Condition" Binding="{Binding Condition, Mode=OneWay}" IsReadOnly="True" Width="*" />
      <DataGridTextColumn CellStyleClasses="colored" FontSize="20" Header="Error text" Binding="{Binding ErrorText, Mode=OneWay}" IsReadOnly="True" />
    </DataGrid.Columns>
  </DataGrid>
</DockPanel>
</UserControl>
